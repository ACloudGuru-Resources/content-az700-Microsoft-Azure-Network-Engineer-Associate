{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the admin user"
      }
    }
  },
  "variables": {
    "orgName": "cake",
    "bastionName": "[concat(variables('orgName'), '-hub-bastion-01')]",
    "bastionPublicIpName": "[concat(variables('orgName'), '-hub-bastion-pip-01')]",
    "bastionSubnetName": "AzureBastionSubnet",
    "bastionSubnetPrefix": "10.60.2.0/27",
    "vm2Name": "[concat(variables('orgName'), '-spoke-vm-01')]",
    "vm2NicName": "[concat(variables('orgName'), '-spoke-vm-nic-01')]",
    "vm2PIPName": "[concat(variables('orgName'), '-spoke-vm-pip-01')]",
    "vmNicName": "[concat(variables('orgName'), '-hub-nic-01')]",
    "vmName": "[concat(variables('orgName'), '-hub-vm-01')]",
    "vmSize": "standard_b2s",
    "adminUsername": "cakeadmin",
    "vmPIPName": "[concat(variables('orgName'), '-vm-pip-01')]",
    "adminPassword": "[parameters('adminPassword')]",
    "hubSubnetName": "hub-subnet-01",
    "hubSubnetPrefix": "10.60.0.0/24",
    "firewallName": "[concat(variables('orgName'), '-hub-fw-01')]",
    "location": "[resourceGroup().location]",
    "numberOfPublicIPAddresses": 1,
    "spoke1VnetName": "[concat(variables('orgName'), '-spoke-vnet-01')]",
    "spoke1VnetPrefix": "10.120.0.0/16",
    "spoke1SubnetName": "spoke-subnet-01",
    "spoke1SubnetPrefix": "10.120.0.0/24",
    "hubVnetName": "[concat(variables('orgName'), '-hub-vnet-01')]",
    "virtualNetworkName": "[variables('hubVnetName')]",
    "vnetAddressPrefix": "10.60.0.0/16",
    "azureFirewallSubnetPrefix": "10.60.1.0/26",
    "fwPublicIpName": "[concat(variables('orgName'), '-hub-fw-pip-01')]",
    "azureFirewallSubnetName": "AzureFirewallSubnet",
    "azureFirewallSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets',variables('virtualNetworkName'), variables('azureFirewallSubnetName'))]",
    "azureFirewallPublicIpId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('fwPublicIpName'))]",
    "azureFirewallSubnetJSON": "[json(format('{{\"id\": \"{0}\"}}', variables('azureFirewallSubnetId')))]",
    "copy": [
      {
        "name": "azureFirewallIpConfigurations",
        "count": "[variables('numberOfPublicIPAddresses')]",
        "input": {
          "name": "[concat('IpConf', copyIndex('azureFirewallIpConfigurations'))]",
          "properties": {
            "subnet": "[if(equals(copyIndex('azureFirewallIpConfigurations'), 0), variables('azureFirewallSubnetJSON'), json('null'))]",
            "publicIPAddress": {
              "id": "[concat(variables('azureFirewallPublicIpId'), add(copyIndex('azureFirewallIpConfigurations'), 1))]"
            }
          }
        }
      }
    ]
  },
  "resources": [
    {
      "name": "[variables('hubVnetName')]",
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "[variables('hubVnetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["[variables('vnetAddressPrefix')]"]
        },
        "subnets": [
          {
            "name": "[variables('hubSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('hubSubnetPrefix')]"
            }
          },
          {
            "name": "[variables('azureFirewallSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('azureFirewallSubnetPrefix')]"
            }
          },
          {
            "name": "[variables('bastionSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('bastionSubnetPrefix')]"
            }
          }
        ],
        "enableDdosProtection": false
      }
    },
    {
      "name": "[variables('spoke1VnetName')]",
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[variables('location')]",
      "tags": {
        "displayName": "[variables('spoke1VnetName')]"
      },
      "properties": {
        "addressSpace": {
          "addressPrefixes": ["[variables('spoke1VnetPrefix')]"]
        },
        "subnets": [
          {
            "name": "[variables('spoke1SubnetName')]",
            "properties": {
              "addressPrefix": "[variables('spoke1SubnetPrefix')]"
            }
          }
        ],
        "enableDdosProtection": false
      }
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "name": "[concat(variables('spoke1VnetName'), '/peer-spoke1-to-hub')]",
      "location": "[variables('location')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('spoke1VnetName'))]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('spoke1VnetName'))]"
        ]
      }
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
      "name": "[concat(variables('hubVnetName'), '/peer-hub-to-spoke1')]",
      "location": "[variables('location')]",
      "properties": {
        "allowVirtualNetworkAccess": true,
        "allowForwardedTraffic": false,
        "allowGatewayTransit": false,
        "useRemoteGateways": false,
        "remoteVirtualNetwork": {
          "id": "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]",
          "[resourceId('Microsoft.Network/virtualNetworks', variables('spoke1VnetName'))]"
        ]
      }
    },
    {
      "name": "[variables('vmPIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic"
      },
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('vm-pip', substring(uniqueString(resourceGroup().id), 0, 3))]"
        }
      }
    },
    {
      "name": "[variables('vmNicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmPIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('hubVnetName'))]"
      ],
      "tags": {},
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vmPIPName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('hubVnetName'), variables('hubSubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vmName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
      ],
      "tags": {
        "displayName": "[variables('vmName')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "windowsVM1",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "windowsVM1OSDisk",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vmNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      }
    },
    {
      "name": "[variables('vm2PIPName')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-11-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Basic"
      },
      "tags": {
        "displayName": "PublicIPAddress"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[concat('vm-pip', substring(uniqueString(resourceGroup().id), 0, 3))]"
        }
      }
    },
    {
      "name": "[variables('vm2NicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PIPName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('spoke1VnetName'))]"
      ],
      "tags": {},
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('vm2PIPName'))]"
              },
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('spoke1VnetName'), variables('spoke1SubnetName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[variables('vm2Name')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-03-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NicName'))]"
      ],
      "tags": {
        "displayName": "[variables('vm2Name')]"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "computerName": "windowsVM1",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2019-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "windowsVM1OSDisk",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('vm2NicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      }
    },
    {
      "name": "[concat(variables('fwPublicIpName'), add(copyIndex(), 1))]",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-04-01",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4"
      },
      "copy": {
        "name": "publicIpCopy",
        "count": "[variables('numberOfPublicIPAddresses')]"
      }
    },
    {
      "apiVersion": "2019-04-01",
      "type": "Microsoft.Network/azureFirewalls",
      "name": "[variables('firewallName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "publicIpCopy"
      ],
      "properties": {
        "ipConfigurations": "[variables('azureFirewallIpConfigurations')]"
      }
    },
    {
      "apiVersion": "2019-02-01",
      "type": "Microsoft.Network/publicIpAddresses",
      "name": "[variables('bastionPublicIpName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      },
      "tags": {}
    },
    {
      "apiVersion": "2019-09-01",
      "type": "Microsoft.Network/bastionHosts",
      "name": "[variables('bastionName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "IpConf",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('bastionSubnetName'))]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('bastionPublicIpName'))]"
              }
            }
          }
        ]
      },
      "tags": {}
    }
  ]
}
